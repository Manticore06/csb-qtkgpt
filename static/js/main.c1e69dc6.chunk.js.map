{"version":3,"sources":["assets/bg.png","components/Styles.js","assets/logo.png","pages/Home.js","components/FormLib.js","auth/actions/userActions.js","pages/Login.js","pages/Signup.js","pages/Dashboard.js","components/AuthRoute.js","components/BasicRoute.js","App.js","auth/reducers/rootReducer.js","auth/store.js","index.js"],"names":["colors","StyledContainer","styled","div","background","StyledTitle","h2","props","size","color","StyledSubTitle","p","Avatar","image","StyledButton","Link","ButtonGroup","StyledTextInput","input","invalid","StyledLabel","StyledFormArea","bg","StyledFormButton","button","ErrorMsg","ExtraText","TextLink","StyledIcon","right","CopyrightText","Home","style","position","top","left","backgroundColor","width","padding","display","justifyContent","Logo","to","TextInput","icon","useField","field","meta","useState","show","setShow","htmlFor","name","label","type","touched","error","onClick","visibility","loginUser","credentials","history","setFieldError","setSubmitting","axios","post","headers","then","response","data","status","message","includes","userData","token","_id","sessionService","saveSession","saveUser","push","catch","err","console","connect","useHistory","initialValues","email","password","validationSchema","Yup","required","min","max","onSubmit","values","log","isSubmitting","placeholder","height","signupUser","dispatch","repeatPassword","dateOfBirth","oneOf","user","session","logoutUser","deleteSession","deleteUser","Date","toLocaleDateString","authenticated","children","rest","render","location","pathname","state","from","checked","path","rootReducer","combineReducers","sessionReducer","middlewares","thunk","store","createStore","compose","applyMiddleware","initSessionService","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e69dc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.79b161a5.png\";","import styled from \"styled-components\";\n\nimport background from \"../assets/bg.png\";\n\n// React router\nimport { Link } from \"react-router-dom\";\n\nexport const colors = {\n  primary: \"#fff\",\n  theme: \"#BE185D\",\n  light1: \"#F3F4F6\",\n  light2: \"#E5E7EB\",\n  dark1: \"#1F2937\",\n  dark2: \"#4B5563\",\n  dark3: \"#9CA3AF\",\n  red: \"#DC2626\",\n};\n\n// Styled components\nexport const StyledContainer = styled.div`\n  margin: 0;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),\n    url(${background});\n  background-size: cover;\n  background-attachment: fixed;\n`;\n\n// Home\nexport const StyledTitle = styled.h2`\n  font-size: ${(props) => props.size}px;\n  text-align: center;\n  color: ${(props) => (props.color ? props.color : colors.primary)};\n  padding: 5px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledSubTitle = styled.p`\n  font-size: ${(props) => props.size}px;\n  text-align: center;\n  color: ${(props) => (props.color ? props.color : colors.primary)};\n  padding: 5px;\n  margin-bottom: 25px;\n`;\n\nexport const Avatar = styled.div`\n  width: 85px;\n  height: 85px;\n  border-radius: 50px;\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  background-position: center;\n  margin: auto;\n`;\n\nexport const StyledButton = styled(Link)`\n  padding: 10px;\n  width: 150px;\n  background-color: transparent;\n  font-size: 16px;\n  color: ${colors.primary};\n  border: 3px solid ${colors.primary};\n  border-radius: 25px;\n  text-decoration: none;\n  text-align: center;\n  transition: ease-in-out 0.3s;\n  outline: 0;\n\n  &:hover {\n    background-color: ${colors.primary};\n    color: ${colors.theme};\n    cursor: pointer;\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  margin-top: 25px;\n`;\n\n// Input\nexport const StyledTextInput = styled.input`\n  width: 280px;\n  padding: 15px;\n  padding-left: 50px;\n  font-size: 17px;\n  letter-spacing: 1px;\n  color: ${colors.dark1};\n  background-color: ${colors.light2};\n  border: 0;\n  outline: 0;\n  display: block;\n  margin: 5px auto 10px auto;\n  transition: ease-in-out 0.3s;\n\n  ${(props) =>\n    props.invalid &&\n    `background-color: ${colors.red}; color: ${colors.primary};`}\n\n  &:focus {\n    background-color: ${colors.dark2};\n    color: ${colors.primary};\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  text-align: left;\n  font-size: 13px;\n  font-weight: bold;\n`;\n\nexport const StyledFormArea = styled.div`\n  background-color: ${(props) => props.bg || colors.light1};\n  text-align: center;\n  padding: 45px 55px;\n`;\n\nexport const StyledFormButton = styled.button`\n  padding: 10px;\n  width: 150px;\n  background-color: transparent;\n  font-size: 16px;\n  color: ${colors.theme};\n  border: 2px solid ${colors.theme};\n  border-radius: 25px;\n  transition: ease-in-out 0.3s;\n  outline: 0;\n\n  &:hover {\n    background-color: ${colors.theme};\n    color: ${colors.primary};\n    cursor: pointer;\n  }\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 11px;\n  color: ${colors.red};\n  margin-top: -5px;\n  margin-bottom: 10px;\n  text-align: left;\n`;\n\nexport const ExtraText = styled.p`\n  font-size: ${(props) => props.size};\n  text-align: center;\n  color: ${(props) => (props.color ? props.color : colors.dark2)};\n  padding: 2px;\n  margin-top: 10px;\n`;\n\nexport const TextLink = styled(Link)`\n  text-decoration: none;\n  color: ${colors.theme};\n  transition: ease-in-out 0.3s;\n\n  &:hover {\n    text-decoration: underline;\n    letter-spacing: 2px;\n    font-weight: bold;\n  }\n`;\n\n// Icons\nexport const StyledIcon = styled.p`\n  color: ${colors.dark1};\n  position: absolute;\n  font-size: 21px;\n  top: 35px;\n  ${(props) => props.right && `right: 15px;`}\n  ${(props) => !props.right && `left: 15px;`}\n`;\n\nexport const CopyrightText = styled.p`\n  padding: 5px;\n  margin: 20px;\n  text-align: center;\n  color: ${colors.light2};\n`;\n","export default __webpack_public_path__ + \"static/media/logo.45df8d75.png\";","import {\n  StyledTitle,\n  StyledSubTitle,\n  Avatar,\n  StyledButton,\n  ButtonGroup\n} from \"./../components/Styles\";\n\n//Logo\nimport Logo from \"../assets/logo.png\";\n\nconst Home = () => {\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          backgroundColor: \"transparent\",\n          width: \"100%\",\n          padding: \"15px\",\n          display: \"flex\",\n          justifyContent: \"flex-start\"\n        }}\n      >\n        <Avatar image={Logo} />\n      </div>\n      <StyledTitle size={65}>Welcome to DELVE</StyledTitle>\n      <StyledSubTitle size={27}>Feel free to explore our page</StyledSubTitle>\n      <ButtonGroup>\n        <StyledButton to=\"/login\">Login</StyledButton>\n        <StyledButton to=\"/signup\">Signup</StyledButton>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  StyledTextInput,\n  StyledLabel,\n  StyledIcon,\n  ErrorMsg,\n} from \"../components/Styles\";\n\n// Eye for password\nimport { FiEyeOff, FiEye } from \"react-icons/fi\";\n\nexport const TextInput = ({ icon, ...props }) => {\n  const [field, meta] = useField(props);\n  const [show, setShow] = useState(false);\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <StyledLabel htmlFor={props.name}>{props.label}</StyledLabel>\n      {props.type !== \"password\" && (\n        <StyledTextInput\n          invalid={meta.touched && meta.error}\n          {...field}\n          {...props}\n        />\n      )}\n\n      {props.type === \"password\" && (\n        <StyledTextInput\n          invalid={meta.touched && meta.error}\n          {...field}\n          {...props}\n          type={show ? \"text\" : \"password\"}\n        />\n      )}\n\n      <StyledIcon>{icon}</StyledIcon>\n\n      {props.type === \"password\" && (\n        <StyledIcon onClick={() => setShow(!show)} right>\n          {show && <FiEye />}\n          {!show && <FiEyeOff />}\n        </StyledIcon>\n      )}\n\n      {meta.touched && meta.error ? (\n        <ErrorMsg>{meta.error}</ErrorMsg>\n      ) : (\n        <ErrorMsg style={{ visibility: \"hidden\" }}>.</ErrorMsg>\n      )}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { sessionService } from \"redux-react-session\";\n\nexport const loginUser = (\n  credentials,\n  history,\n  setFieldError,\n  setSubmitting\n) => {\n  // Make checks and get some data\n\n  return () => {\n    axios\n      .post(\n        \"https://formik-signup-signin.herokuapp.com/user/signin\",\n        credentials,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((response) => {\n        const { data } = response;\n\n        if (data.status === \"FAILED\") {\n          const { message } = data;\n\n          // check for specific error\n          if (message.includes(\"credentials\")) {\n            setFieldError(\"email\", message);\n            setFieldError(\"password\", message);\n          } else if (message.includes(\"password\")) {\n            setFieldError(\"password\", message);\n          }\n        } else if (data.status === \"SUCCESS\") {\n          const userData = data.data[0];\n\n          const token = userData._id;\n\n          sessionService\n            .saveSession(token)\n            .then(() => {\n              sessionService\n                .saveUser(userData)\n                .then(() => {\n                  history.push(\"/dashboard\");\n                })\n                .catch((err) => console.error(err));\n            })\n            .catch((err) => console.error(err));\n        }\n\n        //complete submission\n        setSubmitting(false);\n      })\n      .catch((err) => console.error(err));\n  };\n};\n\nexport const signupUser = (\n  credentials,\n  history,\n  setFieldError,\n  setSubmitting\n) => {\n  return (dispatch) => {\n    axios\n      .post(\n        \"https://formik-signup-signin.herokuapp.com/user/signup\",\n        credentials,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((response) => {\n        const { data } = response;\n\n        if (data.status === \"FAILED\") {\n          const { message } = data;\n\n          // checking for specific error\n          if (message.includes(\"name\")) {\n            setFieldError(\"name\", message);\n          } else if (message.includes(\"email\")) {\n            setFieldError(\"email\", message);\n          } else if (message.includes(\"date\")) {\n            setFieldError(\"dateOfBirth\", message);\n          } else if (message.includes(\"password\")) {\n            setFieldError(\"password\", message);\n          }\n\n          // complete submission\n          setSubmitting(false);\n        } else if (data.status === \"SUCCESS\") {\n          // Login user after successful signup\n          const { email, password } = credentials;\n\n          dispatch(\n            loginUser(\n              { email, password },\n              history,\n              setFieldError,\n              setSubmitting\n            )\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n};\n\nexport const logoutUser = (history) => {\n  return () => {\n    sessionService.deleteSession();\n    sessionService.deleteUser();\n    history.push(\"/\");\n  };\n};\n","// styled components\nimport {\n  StyledTextInput,\n  StyledFormArea,\n  StyledFormButton,\n  StyledLabel,\n  Avatar,\n  StyledTitle,\n  colors,\n  ButtonGroup,\n  ExtraText,\n  TextLink,\n  CopyrightText\n} from \"./../components/Styles\";\n\nimport Logo from \"./../assets/logo.png\";\n\n// formik\nimport { Formik, Form } from \"formik\";\nimport { TextInput } from \"./../components/FormLib\";\nimport * as Yup from \"yup\";\n\n//icons\nimport { FiMail, FiLock } from \"react-icons/fi\";\n\n// Loader\nimport Loader from \"react-loader-spinner\";\n\n// auth & redux\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../auth/actions/userActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = ({ loginUser }) => {\n  const history = useHistory();\n  return (\n    <div>\n      <StyledFormArea>\n        <Avatar image={Logo} />\n        <StyledTitle color={colors.theme} size={30}>\n          Member Login\n        </StyledTitle>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\"\n          }}\n          validationSchema={Yup.object({\n            email: Yup.string()\n              .email(\"Invalid email address\")\n              .required(\"Required\"),\n            password: Yup.string()\n              .min(8, \"Password is too short\")\n              .max(30, \"Password is too long\")\n              .required(\"Required\")\n          })}\n          onSubmit={(values, { setSubmitting, setFieldError }) => {\n            console.log(values);\n            loginUser(values, history, setFieldError, setSubmitting);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <TextInput\n                name=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                placeholder=\"olga1@example.com\"\n                icon={<FiMail />}\n              />\n\n              <TextInput\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"********\"\n                icon={<FiLock />}\n              />\n              <ButtonGroup>\n                {!isSubmitting && (\n                  <StyledFormButton type=\"submit\">Login</StyledFormButton>\n                )}\n\n                {isSubmitting && (\n                  <Loader\n                    type=\"ThreeDots\"\n                    color={colors.theme}\n                    height={49}\n                    width={100}\n                  />\n                )}\n              </ButtonGroup>\n            </Form>\n          )}\n        </Formik>\n        <ExtraText>\n          New here? <TextLink to=\"/signup\">Signup</TextLink>\n        </ExtraText>\n      </StyledFormArea>\n      <CopyrightText>All rights reserved &copy;2023</CopyrightText>\n    </div>\n  );\n};\n\nexport default connect(null, { loginUser })(Login);\n","// styled components\nimport {\n  StyledTextInput,\n  StyledFormArea,\n  StyledFormButton,\n  StyledLabel,\n  Avatar,\n  StyledTitle,\n  colors,\n  ButtonGroup,\n  ExtraText,\n  TextLink,\n  CopyrightText,\n} from \"./../components/Styles\";\n\nimport Logo from \"./../assets/logo.png\";\n\n// formik\nimport { Formik, Form } from \"formik\";\nimport { TextInput } from \"./../components/FormLib\";\nimport * as Yup from \"yup\";\n\n//icons\nimport { FiMail, FiLock, FiUser, FiCalendar } from \"react-icons/fi\";\n\n// Loader\nimport Loader from \"react-loader-spinner\";\n\n// auth & redux\nimport { connect } from \"react-redux\";\nimport { signupUser } from \"../auth/actions/userActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Signup = ({ signupUser }) => {\n  const history = useHistory();\n  return (\n    <div>\n      <StyledFormArea>\n        <Avatar image={Logo} />\n        <StyledTitle color={colors.theme} size={30}>\n          Member Signup\n        </StyledTitle>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n            repeatPassword: \"\",\n            dateOfBirth: \"\",\n            name: \"\",\n          }}\n          validationSchema={Yup.object({\n            email: Yup.string()\n              .email(\"Invalid email address\")\n              .required(\"Required\"),\n            password: Yup.string()\n              .min(8, \"Password is too short\")\n              .max(30, \"Password is too long\")\n              .required(\"Required\"),\n            name: Yup.string().required(\"Required\"),\n            dateOfBirth: Yup.date().required(\"Required\"),\n            repeatPassword: Yup.string()\n              .required(\"Required\")\n              .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\n          })}\n          onSubmit={(values, { setSubmitting, setFieldError }) => {\n            signupUser(values, history, setFieldError, setSubmitting);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <TextInput\n                name=\"name\"\n                type=\"text\"\n                label=\"Full Name\"\n                placeholder=\"Olga Simpson\"\n                icon={<FiUser />}\n              />\n              <TextInput\n                name=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                placeholder=\"olga1@example.com\"\n                icon={<FiMail />}\n              />\n              <TextInput\n                name=\"dateOfBirth\"\n                type=\"date\"\n                label=\"Date of Birth\"\n                icon={<FiCalendar />}\n              />\n              <TextInput\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"********\"\n                icon={<FiLock />}\n              />\n              <TextInput\n                name=\"repeatPassword\"\n                type=\"password\"\n                label=\"Repeat Password\"\n                placeholder=\"********\"\n                icon={<FiLock />}\n              />\n              <ButtonGroup>\n                {!isSubmitting && (\n                  <StyledFormButton type=\"submit\">Signup</StyledFormButton>\n                )}\n\n                {isSubmitting && (\n                  <Loader\n                    type=\"ThreeDots\"\n                    color={colors.theme}\n                    height={49}\n                    width={100}\n                  />\n                )}\n              </ButtonGroup>\n            </Form>\n          )}\n        </Formik>\n        <ExtraText>\n          Already have an account? <TextLink to=\"/login\">Login</TextLink>\n        </ExtraText>\n      </StyledFormArea>\n      <CopyrightText>All rights reserved &copy;2020</CopyrightText>\n    </div>\n  );\n};\n\nexport default connect(null, { signupUser })(Signup);\n","import {\n  StyledTitle,\n  StyledSubTitle,\n  Avatar,\n  StyledButton,\n  ButtonGroup,\n  StyledFormArea,\n  colors,\n  ExtraText,\n} from \"./../components/Styles\";\n\n//logo\nimport Logo from \"./../assets/logo.png\";\n\n// auth & redux\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"./../auth/actions/userActions\";\n\n// React router\nimport { useHistory } from \"react-router-dom\";\n\nconst Dashboard = ({ logoutUser, user }) => {\n  const history = useHistory();\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          backgroundColor: \"transparent\",\n          width: \"100%\",\n          padding: \"15px\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <Avatar image={Logo} />\n      </div>\n      <StyledFormArea bg={colors.dark2}>\n        <StyledTitle size={65}>Welcome, {user.name}</StyledTitle>\n        <ExtraText color={colors.light1}>{user.email}</ExtraText>\n        <ExtraText color={colors.light1}>\n          {new Date(user.dateOfBirth).toLocaleDateString()}\n        </ExtraText>\n        <ButtonGroup>\n          <StyledButton to=\"#\" onClick={() => logoutUser(history)}>\n            Logout\n          </StyledButton>\n        </ButtonGroup>\n      </StyledFormArea>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ session }) => ({\n  user: session.user,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\n","// Dashboard cannot be accessed unless logged in\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst AuthRoute = ({ children, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        authenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = ({ session }) => ({\n  authenticated: session.authenticated,\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n","// Dashboard cannot be accessed unless logged in\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst BasicRoute = ({ children, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !authenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/dashboard\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = ({ session }) => ({\n  authenticated: session.authenticated,\n});\n\nexport default connect(mapStateToProps)(BasicRoute);\n","// Pages\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Dashboard from \"./pages/Dashboard\";\n\n// styled components\nimport { StyledContainer } from \"./components/Styles\";\n\n// Loader css\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// auth & redux\nimport AuthRoute from \"./components/AuthRoute\";\nimport BasicRoute from \"./components/BasicRoute\";\nimport { connect } from \"react-redux\";\n\nfunction App({ checked }) {\n  return (\n    <Router>\n      {checked && (\n        <StyledContainer>\n          <Switch>\n            <BasicRoute path=\"/signup\">\n              <Signup />\n            </BasicRoute>\n            <BasicRoute path=\"/login\">\n              <Login />\n            </BasicRoute>\n            <AuthRoute path=\"/dashboard\">\n              <Dashboard />\n            </AuthRoute>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </StyledContainer>\n      )}\n    </Router>\n  );\n}\n\nconst mapStateToProps = ({ session }) => ({\n  checked: session.checked,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\n\n//session\nimport { sessionReducer } from \"redux-react-session\";\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nimport { sessionService } from \"redux-react-session\";\n\nconst initialState = {};\nconst middlewares = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middlewares))\n);\n\nsessionService.initSessionService(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n//auth stuff\nimport { Provider } from \"react-redux\";\nimport store from \"./auth/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}